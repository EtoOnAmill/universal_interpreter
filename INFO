This language is designed so that every possible byte sequence is a valid program.

The requirements for a valid programs that i wish to follow are:
- no parsing error
- no runtime exceptions

Since the unit of the language is a byte, here are all 255 possible bytes

0x00    <nul>  Null
0x01    <soh>  Start of Heading
0x02    <stx>  Start of Text
0x03    <etx>  End of Text
0x04    <eot>  End of Transmission
0x05    <enq>  Enquiry
0x06    <ack>  Acknowledge
0x07    <bel>  Bell
0x08    <bs>  Backspace
0x09    <ht>  Horizontal Tab
0x0A    <lf>  NL Line Feed, New Line
0x0B    <vt>  Vertical Tab
0x0C    <ff>  NP Form Feed, New Page
0x0D    <cr>  Carriage Return
0x0E    <so>  Shift Out
0x0F    <si>  Shift In
0x10    <dle>  Data Link Escape
0x11    <dc1>  Device Control 1
0x12    <dc2>  Device Control 2
0x13    <dc3>  Device Control 3
0x14    <dc4>  Device Control 4
0x15    <nak>  Negative Acknowledge
0x16    <syn>  Synchronous Idle
0x17    <etb>  End of Transmission Block
0x18    <can>  Cancel
0x19    <em>  End of Medium
0x1A    <sub>  Substitute
0x1B    <esc>  Escape
0x1C    <fs>  File Separator
0x1D    <gs>  Group Separator
0x1E    <rs>  Record Separator
0x1F    <us>  Unit Separator
0x20    <(>Space)  Space
0x21    <!>  Exclamation Mark
0x22    <">  Double Quote
0x23    <#>  Hash or Number
0x24    <$>  Dollar Sign
0x25    <%>  Percentage
0x26    <&>  Ampersand
0x27    <'>  Single Quote
0x28    <(>  Left Parenthesis
0x29    <)>  Right Parenthesis
0x2A    <*>  Asterisk
0x2B    <+>  Plus Sign
0x2C    <,>  Comma
0x2D    <->  Minus Sign
0x2E    <.>  Period
0x2F    </>  Slash
0x30    <0>  Zero
0x31    <1>  Number One
0x32    <2>  Number Two
0x33    <3>  Number Three
0x34    <4>  Number Four
0x35    <5>  Number Five
0x36    <6>  Number Six
0x37    <7>  Number Seven
0x38    <8>  Number Eight
0x39    <9>  Number Nine
0x3A    <:>  Colon
0x3B    <;>  Semicolon
0x3C    <<>  Less Than
0x3D    <=>  Equals Sign
0x3E    <>>  Greater Than
0x3F    <?>  Question Mark
0x40    <@>  At Sign
0x41    <A>  Upper Case Letter A
0x42    <B>  Upper Case Letter B
0x43    <C>  Upper Case Letter C
0x44    <D>  Upper Case Letter D
0x45    <E>  Upper Case Letter E
0x46    <F>  Upper Case Letter F
0x47    <G>  Upper Case Letter G
0x48    <H>  Upper Case Letter H
0x49    <I>  Upper Case Letter I
0x4A    <J>  Upper Case Letter J
0x4B    <K>  Upper Case Letter K
0x4C    <L>  Upper Case Letter L
0x4D    <M>  Upper Case Letter M
0x4E    <N>  Upper Case Letter N
0x4F    <O>  Upper Case Letter O
0x50    <P>  Upper Case Letter P
0x51    <Q>  Upper Case Letter Q
0x52    <R>  Upper Case Letter R
0x53    <S>  Upper Case Letter S
0x54    <T>  Upper Case Letter T
0x55    <U>  Upper Case Letter U
0x56    <V>  Upper Case Letter V
0x57    <W>  Upper Case Letter W
0x58    <X>  Upper Case Letter X
0x59    <Y>  Upper Case Letter Y
0x5A    <Z>  Upper Case Letter Z
0x5B    <[>  Left Square Bracket
0x5C    <\>  Backslash
0x5D    <]>  Right Square Bracket
0x5E    <^>  Caret or Circumflex
0x5F    <_>  Underscore
0x60    <`>  Grave Accent
0x61    <a>  Lower Case Letter a
0x62    <b>  Lower Case Letter b
0x63    <c>  Lower Case Letter c
0x64    <d>  Lower Case Letter d
0x65    <e>  Lower Case Letter e
0x66    <f>  Lower Case Letter f
0x67    <g>  Lower Case Letter g
0x68    <h>  Lower Case Letter h
0x69    <i>  Lower Case Letter i
0x6A    <j>  Lower Case Letter j
0x6B    <k>  Lower Case Letter k
0x6C    <l>  Lower Case Letter l
0x6D    <m>  Lower Case Letter m
0x6E    <n>  Lower Case Letter n
0x6F    <o>  Lower Case Letter o
0x70    <p>  Lower Case Letter p
0x71    <q>  Lower Case Letter q
0x72    <r>  Lower Case Letter r
0x73    <s>  Lower Case Letter s
0x74    <t>  Lower Case Letter t
0x75    <u>  Lower Case Letter u
0x76    <v>  Lower Case Letter v
0x77    <w>  Lower Case Letter w
0x78    <x>  Lower Case Letter x
0x79    <y>  Lower Case Letter y
0x7A    <z>  Lower Case Letter z
0x7B    <{>  Left Curly Bracket
0x7C    <|>  Vertical Bar
0x7D    <}>  Right Curly Bracket
0x7E    <~>  Tilde
0x7F    <del>  Delete
